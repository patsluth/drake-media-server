version: "3.9"

services:
  # plex:
  #   image: plexinc/pms-docker
  #   container_name: plex
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - VERSION=docker
  #     - HOSTNAME=”PlexServer”
  #   volumes:
  #     - ${PROVISION_DIR}/plex:/config
  #     - ${CONTENT_DIR}/media:/data/media
  #   network_mode: host
  #   # ports: # when network: bridge
  #   #   - "32400:32400/tcp"
  #   #   - "8324:8324/tcp" # Required if network: bridge
  #   #   - "32469:32469/tcp" # Required if network: bridge
  #   #   - "1900:1900/udp" # Required if network: bridge
  #   #   - "32410:32410/udp" # Required if network: bridge
  #   #   - "32412:32412/udp" # Required if network: bridge
  #   #   - "32413:32413/udp" # Required if network: bridge
  #   #   - "32414:32414/udp" # Required if network: bridge
  #   privileged: true # libusb_init failed
  #   restart: unless-stopped
  #   # networks:
  #   #   - drake-media-network

  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    stop_grace_period: 1m
    cap_add:
      - net_admin
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
      - VPN_SERVICE_PROVIDER=private internet access
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_REGIONS=CA Vancouver
      - VPN_PORT_FORWARDING_PROVIDER=private internet access
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_STATUS_FILE=/gluetun/forwarded_port
      - UPDATER_PERIOD=24h
      - HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH=/gluetun/gluetun-control-server-config.toml
    ports:
      - 6380:6380
      - 4443:4443
      # HTTP proxy
      - 8888:8888/tcp
      # Shadowsocks
      - 8388:8388/tcp
      - 8388:8388/udp
      # qBittorrent
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
      # flood
      # - 3001:3001
      # Radarr
      - 7878:7878
      # Sonarr
      - 8989:8989
      # Prowlarr
      - 9696:9696
      # Flaresolverr
      - 8191:8191
    restart: unless-stopped
    volumes:
      - ${PROVISION_DIR}/gluetun:/gluetun
      - ./gluetun-control-server-config.toml:/gluetun/auth/config.toml
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'echo "RUNNING HEALTHCHECK" && curl -m 5 -s https://www.privateinternetaccess.com/site-api/exposed-check --data-raw "{\"ipAddress\": \"`curl -m 5 -s ifconfig.co`\"}" | grep -q "false" && echo "HEALTHCHECK SUCCESS" || (echo "HEALTCHECK FAIL" && exit 1);',
        ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 15s

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
    volumes:
      - ${PROVISION_DIR}/qbittorrent:/config
      - ${CONTENT_DIR}/torrents:/data/torrents
    restart: unless-stopped
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "Authorization: $GLUETUN_CONTROL_SERVER_AUTH_KEY",
          "-s",
          "http://localhost:8000/v1/openvpn/status",
          "|",
          "grep",
          "-q",
          '{"status":"running"}',
        ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 15s

  # flood:
  #   image: jesec/flood
  #   container_name: flood
  #   restart: unless-stopped
  #   user: 1000:1000
  #   command: --port 3001 --allowedpath /data
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - HOME=config
  #   volumes:
  #     - ${PROVISION_DIR}/flood:/config
  #     - ${CONTENT_DIR}:/data
  #   # ports:
  #   #   - 3001:3001
  #   network_mode: "service:gluetun"
  #   depends_on:
  #     - gluetun

  gluetun-qbittorrent-port-manager:
    image: patrickaclark/gluetun-qbittorrent-port-manager:latest
    container_name: gluetun-qbittorrent-port-manager
    restart: unless-stopped
    volumes:
      - ${PROVISION_DIR}/gluetun:/gluetun
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
      - QBITTORRENT_SERVER=localhost
      - QBITTORRENT_PORT=8080
      - PORT_FORWARDED=/gluetun/forwarded_port
      - HTTP_S=http
      # IP or FQDN of gluetun control server
      - GLUETUN_HOST=localhost
      # port of gluetun control server
      - GLUETUN_PORT=8000
      - RECHECK_TIME=60
      - GLUETUN_CONTROL_SERVER_AUTH_KEY=${GLUETUN_CONTROL_SERVER_AUTH_KEY}
    network_mode: "service:gluetun"
    depends_on:
      - gluetun
      - qbittorrent
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "Authorization: $GLUETUN_CONTROL_SERVER_AUTH_KEY",
          "-s",
          "http://localhost:8000/v1/openvpn/status",
          "|",
          "grep",
          "-q",
          '{"status":"running"}',
        ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 15s

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
    volumes:
      - ${PROVISION_DIR}/radarr:/config
      - ${CONTENT_DIR}:/data
    restart: unless-stopped
    network_mode: "service:gluetun"

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
    volumes:
      - ${PROVISION_DIR}/sonarr:/config
      - ${CONTENT_DIR}:/data
    restart: unless-stopped
    network_mode: "service:gluetun"

  # lidarr:
  #   image: linuxserver/lidarr
  #   container_name: lidarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/Edmonton
  #   volumes:
  #     - ${PROVISION_DIR}/lidarr:/config
  #     - ${CONTENT_DIR}:/data
  #   ports:
  #     - "8686:8686"
  #   restart: unless-stopped
  #   networks:
  #     - drake-media-network

  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
    volumes:
      - ${PROVISION_DIR}/prowlarr:/config
    restart: unless-stopped
    network_mode: "service:gluetun"

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - PUID=1000
      - PGID=1000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Edmonton
    volumes:
      - ${PROVISION_DIR}/flaresolverr:/config
    restart: unless-stopped
    network_mode: "service:gluetun"

  # bazarr:
  #   image: linuxserver/bazarr
  #   container_name: bazarr
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/Edmonton
  #   volumes:
  #     - ${PROVISION_DIR}/bazarr:/config
  #     - ${CONTENT_DIR}:/data
  #   ports:
  #     - "6767:6767"
  #   restart: unless-stopped
  #   networks:
  #     - drake-media-network

  myanonamouse:
    build: context/myanonamouse
    container_name: myanonamouse
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Edmonton
      - MAM_ID=${MAM_ID}
      - RECHECK_TIME=21600 # 6 hours
    restart: unless-stopped
    network_mode: "service:gluetun"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "Authorization: $GLUETUN_CONTROL_SERVER_AUTH_KEY",
          "-s",
          "http://localhost:8000/v1/openvpn/status",
          "|",
          "grep",
          "-q",
          '{"status":"running"}',
        ]
      interval: 60s
      timeout: 10s
      retries: 5
      start_period: 15s
